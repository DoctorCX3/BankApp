/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import core.models.TransactionType;
import core.models.Account;
import core.models.User;
import core.models.Transaction;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edangulo
 */
public class BankFrame extends javax.swing.JFrame {
    
    private ArrayList<Account> accounts;
    private ArrayList<Transaction> transactions;
    private ArrayList<User> users;
    
    /**
     * Creates new form BankFrame
     */
    public BankFrame() {
        initComponents();
        this.accounts = new ArrayList<>();
        this.transactions = new ArrayList<>();
        this.users = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pesta√±asTabbedPane = new javax.swing.JTabbedPane();
        registerUserPanel = new javax.swing.JPanel();
        registerUserLabel = new javax.swing.JLabel();
        registerUserIDLabel = new javax.swing.JLabel();
        registerUserFirstnameLabel = new javax.swing.JLabel();
        registerUserLastnameLabel = new javax.swing.JLabel();
        registerUserAgeLabel = new javax.swing.JLabel();
        regisUserIDTextField = new javax.swing.JTextField();
        regisUserFirstnameTextField = new javax.swing.JTextField();
        regisUserLastnameTextField = new javax.swing.JTextField();
        regisUserAgeTextField = new javax.swing.JTextField();
        regisUserRegisterButton = new javax.swing.JButton();
        createAccountPanel = new javax.swing.JPanel();
        createAccountLabel = new javax.swing.JLabel();
        createAccountUserIDLabel = new javax.swing.JLabel();
        createAccountInitialBalanceLabel = new javax.swing.JLabel();
        cAccountIDTextField = new javax.swing.JTextField();
        cAccountInitBalanTextField = new javax.swing.JTextField();
        cAccountCreateButton = new javax.swing.JButton();
        makeTransactionPanel = new javax.swing.JPanel();
        makeTransactionLabel = new javax.swing.JLabel();
        makeTransacTypeLabel = new javax.swing.JLabel();
        makeTransacSourAccoLabel = new javax.swing.JLabel();
        makeTransacDestAccoLabel = new javax.swing.JLabel();
        makeTransacAmountLabel = new javax.swing.JLabel();
        mTransacSourAccTextField = new javax.swing.JTextField();
        mTransacDestAccTextField = new javax.swing.JTextField();
        mTransacAmountTextField = new javax.swing.JTextField();
        mTransacTypeButton = new javax.swing.JComboBox<>();
        mTransacExecuteButton = new javax.swing.JButton();
        listUsersPanel = new javax.swing.JPanel();
        listUsersLabel = new javax.swing.JLabel();
        listUsersScrollPane = new javax.swing.JScrollPane();
        listUsersTable = new javax.swing.JTable();
        listUsersRefreshButton = new javax.swing.JButton();
        listAccountsPanel = new javax.swing.JPanel();
        listAccountsLabel = new javax.swing.JLabel();
        listAccountsScrollPane = new javax.swing.JScrollPane();
        listAccountsTable = new javax.swing.JTable();
        listAccountsRefreshButton = new javax.swing.JButton();
        listTransactionsPanel = new javax.swing.JPanel();
        listTransactionsLabel = new javax.swing.JLabel();
        listTransactionsScrollPane = new javax.swing.JScrollPane();
        listTransactionsTable = new javax.swing.JTable();
        listTransactioRefreshButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        registerUserLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        registerUserLabel.setText("Register User");

        registerUserIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerUserIDLabel.setText("ID");

        registerUserFirstnameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerUserFirstnameLabel.setText("Firstname");

        registerUserLastnameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerUserLastnameLabel.setText("Lastname");

        registerUserAgeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerUserAgeLabel.setText("Age");

        regisUserIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regisUserIDTextFieldActionPerformed(evt);
            }
        });

        regisUserLastnameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regisUserLastnameTextFieldActionPerformed(evt);
            }
        });

        regisUserAgeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regisUserAgeTextFieldActionPerformed(evt);
            }
        });

        regisUserRegisterButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        regisUserRegisterButton.setText("Register");
        regisUserRegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regisUserRegisterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerUserPanelLayout = new javax.swing.GroupLayout(registerUserPanel);
        registerUserPanel.setLayout(registerUserPanelLayout);
        registerUserPanelLayout.setHorizontalGroup(
            registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerUserPanelLayout.createSequentialGroup()
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerUserPanelLayout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(registerUserLabel)
                        .addGap(0, 270, Short.MAX_VALUE))
                    .addGroup(registerUserPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registerUserFirstnameLabel)
                            .addComponent(registerUserLastnameLabel)
                            .addComponent(registerUserAgeLabel)
                            .addComponent(registerUserIDLabel))
                        .addGap(18, 18, 18)
                        .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(regisUserIDTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(regisUserLastnameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(regisUserAgeTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(regisUserFirstnameTextField, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(registerUserPanelLayout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(regisUserRegisterButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        registerUserPanelLayout.setVerticalGroup(
            registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerUserPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(registerUserLabel)
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regisUserIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerUserIDLabel))
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regisUserFirstnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerUserFirstnameLabel))
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regisUserLastnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerUserLastnameLabel))
                .addGap(18, 18, 18)
                .addGroup(registerUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regisUserAgeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerUserAgeLabel))
                .addGap(18, 18, 18)
                .addComponent(regisUserRegisterButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pesta√±asTabbedPane.addTab("Register User", registerUserPanel);

        createAccountLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        createAccountLabel.setText("Create Account");

        createAccountUserIDLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        createAccountUserIDLabel.setText("User ID");

        createAccountInitialBalanceLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        createAccountInitialBalanceLabel.setText("Initial Balance");

        cAccountCreateButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        cAccountCreateButton.setText("Create");
        cAccountCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cAccountCreateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createAccountPanelLayout = new javax.swing.GroupLayout(createAccountPanel);
        createAccountPanel.setLayout(createAccountPanelLayout);
        createAccountPanelLayout.setHorizontalGroup(
            createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createAccountPanelLayout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(createAccountLabel))
                    .addGroup(createAccountPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createAccountUserIDLabel)
                            .addComponent(createAccountInitialBalanceLabel))
                        .addGap(18, 18, 18)
                        .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cAccountInitBalanTextField)
                            .addComponent(cAccountIDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(cAccountCreateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        createAccountPanelLayout.setVerticalGroup(
            createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createAccountPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(createAccountLabel)
                .addGap(18, 18, 18)
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cAccountIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createAccountUserIDLabel))
                .addGap(18, 18, 18)
                .addGroup(createAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cAccountInitBalanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createAccountInitialBalanceLabel))
                .addGap(18, 18, 18)
                .addComponent(cAccountCreateButton)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        pesta√±asTabbedPane.addTab("Create Account", createAccountPanel);

        makeTransactionLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        makeTransactionLabel.setText("Make Transaction");

        makeTransacTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        makeTransacTypeLabel.setText("Type");

        makeTransacSourAccoLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        makeTransacSourAccoLabel.setText("Source Account");

        makeTransacDestAccoLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        makeTransacDestAccoLabel.setText("Destination Account");

        makeTransacAmountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        makeTransacAmountLabel.setText("Amount");

        mTransacDestAccTextField.setToolTipText("");

        mTransacTypeButton.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deposit", "Withdraw", "Transfer" }));
        mTransacTypeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTransacTypeButtonActionPerformed(evt);
            }
        });

        mTransacExecuteButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        mTransacExecuteButton.setText("Execute");
        mTransacExecuteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTransacExecuteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout makeTransactionPanelLayout = new javax.swing.GroupLayout(makeTransactionPanel);
        makeTransactionPanel.setLayout(makeTransactionPanelLayout);
        makeTransactionPanelLayout.setHorizontalGroup(
            makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(makeTransacTypeLabel)
                            .addComponent(makeTransacAmountLabel)
                            .addComponent(makeTransacDestAccoLabel)
                            .addComponent(makeTransacSourAccoLabel))
                        .addGap(18, 18, 18)
                        .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mTransacDestAccTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mTransacSourAccTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mTransacTypeButton, 0, 485, Short.MAX_VALUE)
                            .addComponent(mTransacAmountTextField, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(makeTransactionLabel)))
                .addContainerGap())
            .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(mTransacExecuteButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        makeTransactionPanelLayout.setVerticalGroup(
            makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeTransactionPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(makeTransactionLabel)
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mTransacTypeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(makeTransacTypeLabel))
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mTransacSourAccTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(makeTransacSourAccoLabel))
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mTransacDestAccTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(makeTransacDestAccoLabel))
                .addGap(18, 18, 18)
                .addGroup(makeTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mTransacAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(makeTransacAmountLabel))
                .addGap(18, 18, 18)
                .addComponent(mTransacExecuteButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pesta√±asTabbedPane.addTab("Make Transaction", makeTransactionPanel);

        listUsersLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        listUsersLabel.setText("List Users");

        listUsersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Fullname", "Age", "Number of Accounts"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        listUsersScrollPane.setViewportView(listUsersTable);

        listUsersRefreshButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        listUsersRefreshButton.setText("Refresh");
        listUsersRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listUsersRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listUsersPanelLayout = new javax.swing.GroupLayout(listUsersPanel);
        listUsersPanel.setLayout(listUsersPanelLayout);
        listUsersPanelLayout.setHorizontalGroup(
            listUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listUsersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listUsersPanelLayout.createSequentialGroup()
                        .addComponent(listUsersScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(listUsersPanelLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(listUsersLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(listUsersRefreshButton)
                        .addGap(88, 88, 88))))
        );
        listUsersPanelLayout.setVerticalGroup(
            listUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listUsersPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(listUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listUsersLabel)
                    .addComponent(listUsersRefreshButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(listUsersScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        pesta√±asTabbedPane.addTab("List Users", listUsersPanel);

        listAccountsLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        listAccountsLabel.setText("List Accounts");

        listAccountsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "User ID", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        listAccountsScrollPane.setViewportView(listAccountsTable);

        listAccountsRefreshButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        listAccountsRefreshButton.setText("Refresh");
        listAccountsRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listAccountsRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listAccountsPanelLayout = new javax.swing.GroupLayout(listAccountsPanel);
        listAccountsPanel.setLayout(listAccountsPanelLayout);
        listAccountsPanelLayout.setHorizontalGroup(
            listAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listAccountsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listAccountsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(listAccountsPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(listAccountsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(listAccountsRefreshButton)
                .addGap(90, 90, 90))
        );
        listAccountsPanelLayout.setVerticalGroup(
            listAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listAccountsPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(listAccountsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listAccountsLabel)
                    .addComponent(listAccountsRefreshButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(listAccountsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        pesta√±asTabbedPane.addTab("List Accounts", listAccountsPanel);

        listTransactionsLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        listTransactionsLabel.setText("List Transactions");

        listTransactionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Type", "Source Account ID", "Destination Account ID", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listTransactionsScrollPane.setViewportView(listTransactionsTable);

        listTransactioRefreshButton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        listTransactioRefreshButton.setText("Refresh");
        listTransactioRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listTransactioRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listTransactionsPanelLayout = new javax.swing.GroupLayout(listTransactionsPanel);
        listTransactionsPanel.setLayout(listTransactionsPanelLayout);
        listTransactionsPanelLayout.setHorizontalGroup(
            listTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listTransactionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listTransactionsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(listTransactionsPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(listTransactionsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(listTransactioRefreshButton)
                .addGap(89, 89, 89))
        );
        listTransactionsPanelLayout.setVerticalGroup(
            listTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listTransactionsPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(listTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listTransactionsLabel)
                    .addComponent(listTransactioRefreshButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(listTransactionsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        pesta√±asTabbedPane.addTab("List Transactions", listTransactionsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pesta√±asTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pesta√±asTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regisUserRegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regisUserRegisterButtonActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(regisUserIDTextField.getText());
            String firstname = regisUserFirstnameTextField.getText();
            String lastname = regisUserLastnameTextField.getText();
            int age = Integer.parseInt(regisUserAgeTextField.getText());
            
            this.users.add(new User(id, firstname, lastname, age));
            
            regisUserIDTextField.setText("");
            regisUserFirstnameTextField.setText("");
            regisUserLastnameTextField.setText("");
            regisUserAgeTextField.setText("");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_regisUserRegisterButtonActionPerformed

    private void cAccountCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cAccountCreateButtonActionPerformed
        // TODO add your handling code here:
        try {
            int userId = Integer.parseInt(cAccountIDTextField.getText());
            double initialBalance = Double.parseDouble(cAccountInitBalanTextField.getText());
            
            User selectedUser = null;
            for (User user : this.users) {
                if (user.getId() == userId && selectedUser == null) {
                    selectedUser = user;
                }
            }
            
            if (selectedUser != null) {
                Random random = new Random();
                int first = random.nextInt(1000);
                int second = random.nextInt(1000000);
                int third = random.nextInt(100);
                
                String accountId = String.format("%03d", first) + "-" + String.format("%06d", second) + "-" + String.format("%02d", third);
                
                this.accounts.add(new Account(accountId, selectedUser, initialBalance));
                
                cAccountIDTextField.setText("");
                cAccountInitBalanTextField.setText("");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cAccountCreateButtonActionPerformed

    private void mTransacExecuteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mTransacExecuteButtonActionPerformed
        // TODO add your handling code here:
        try {
            String type = mTransacTypeButton.getItemAt(mTransacTypeButton.getSelectedIndex());
            switch (type) {
                case "Deposit": {
                    String destinationAccountId = mTransacDestAccTextField.getText();
                    double amount = Double.parseDouble(mTransacAmountTextField.getText());
                    
                    Account destinationAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(destinationAccountId)) {
                            destinationAccount = account;
                        }
                    }
                    if (destinationAccount != null) {
                        destinationAccount.deposit(amount);
                        
                        this.transactions.add(new Transaction(TransactionType.DEPOSIT, null, destinationAccount, amount));
                        
                        mTransacSourAccTextField.setText("");
                        mTransacDestAccTextField.setText("");
                        mTransacAmountTextField.setText("");
                    }
                    break;
                }
                case "Withdraw": {
                    String sourceAccountId = mTransacSourAccTextField.getText();
                    double amount = Double.parseDouble(mTransacAmountTextField.getText());
                    
                    Account sourceAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(sourceAccountId)) {
                            sourceAccount = account;
                        }
                    }
                    if (sourceAccount != null && sourceAccount.withdraw(amount)) {
                        this.transactions.add(new Transaction(TransactionType.WITHDRAW, sourceAccount, null, amount));
                        
                        mTransacSourAccTextField.setText("");
                        mTransacDestAccTextField.setText("");
                        mTransacAmountTextField.setText("");
                    }
                    break;
                }
                case "Transfer": {
                    String sourceAccountId = mTransacSourAccTextField.getText();
                    String destinationAccountId = mTransacDestAccTextField.getText();
                    double amount = Double.parseDouble(mTransacAmountTextField.getText());
                    
                    Account sourceAccount = null;
                    Account destinationAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(sourceAccountId)) {
                            sourceAccount = account;
                        }
                    }
                    for (Account account : this.accounts) {
                        if (account.getId().equals(destinationAccountId)) {
                            destinationAccount = account;
                        }
                    }
                    if (sourceAccount != null && destinationAccount != null && sourceAccount.withdraw(amount)) {
                        destinationAccount.deposit(amount);
                        
                        this.transactions.add(new Transaction(TransactionType.TRANSFER, sourceAccount, destinationAccount, amount));
                        
                        mTransacSourAccTextField.setText("");
                        mTransacDestAccTextField.setText("");
                        mTransacAmountTextField.setText("");
                    }
                    break;
                }
                default: {
                    mTransacSourAccTextField.setText("");
                    mTransacDestAccTextField.setText("");
                    mTransacAmountTextField.setText("");
                    break;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_mTransacExecuteButtonActionPerformed

    private void listUsersRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listUsersRefreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) listUsersTable.getModel();
        model.setRowCount(0);
        
        this.users.sort((obj1, obj2) -> (obj1.getId() - obj2.getId()));
        
        for (User user : this.users) {
            model.addRow(new Object[]{user.getId(), user.getFirstname() + " " + user.getLastname(), user.getAge(), user.getNumAccounts()});
        }
    }//GEN-LAST:event_listUsersRefreshButtonActionPerformed

    private void listAccountsRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAccountsRefreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) listAccountsTable.getModel();
        model.setRowCount(0);
        
        this.accounts.sort((obj1, obj2) -> (obj1.getId().compareTo(obj2.getId())));
        
        for (Account account : this.accounts) {
            model.addRow(new Object[]{account.getId(), account.getOwner().getId(), account.getBalance()});
        }
    }//GEN-LAST:event_listAccountsRefreshButtonActionPerformed

    private void listTransactioRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listTransactioRefreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) listTransactionsTable.getModel();
        model.setRowCount(0);
        
        ArrayList<Transaction> transactionsCopy = (ArrayList<Transaction>) this.transactions.clone();
        Collections.reverse(transactionsCopy);
        
        for (Transaction transaction : transactionsCopy) {
            model.addRow(new Object[]{transaction.getType().name(), (transaction.getSourceAccount() != null ? transaction.getSourceAccount().getId() : "None"), (transaction.getDestinationAccount()!= null ? transaction.getDestinationAccount().getId() : "None"), transaction.getAmount()});
        }
    }//GEN-LAST:event_listTransactioRefreshButtonActionPerformed

    private void regisUserIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regisUserIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regisUserIDTextFieldActionPerformed

    private void regisUserAgeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regisUserAgeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regisUserAgeTextFieldActionPerformed

    private void regisUserLastnameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regisUserLastnameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regisUserLastnameTextFieldActionPerformed

    private void mTransacTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mTransacTypeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mTransacTypeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cAccountCreateButton;
    private javax.swing.JTextField cAccountIDTextField;
    private javax.swing.JTextField cAccountInitBalanTextField;
    private javax.swing.JLabel createAccountInitialBalanceLabel;
    private javax.swing.JLabel createAccountLabel;
    private javax.swing.JPanel createAccountPanel;
    private javax.swing.JLabel createAccountUserIDLabel;
    private javax.swing.JLabel listAccountsLabel;
    private javax.swing.JPanel listAccountsPanel;
    private javax.swing.JButton listAccountsRefreshButton;
    private javax.swing.JScrollPane listAccountsScrollPane;
    private javax.swing.JTable listAccountsTable;
    private javax.swing.JButton listTransactioRefreshButton;
    private javax.swing.JLabel listTransactionsLabel;
    private javax.swing.JPanel listTransactionsPanel;
    private javax.swing.JScrollPane listTransactionsScrollPane;
    private javax.swing.JTable listTransactionsTable;
    private javax.swing.JLabel listUsersLabel;
    private javax.swing.JPanel listUsersPanel;
    private javax.swing.JButton listUsersRefreshButton;
    private javax.swing.JScrollPane listUsersScrollPane;
    private javax.swing.JTable listUsersTable;
    private javax.swing.JTextField mTransacAmountTextField;
    private javax.swing.JTextField mTransacDestAccTextField;
    private javax.swing.JButton mTransacExecuteButton;
    private javax.swing.JTextField mTransacSourAccTextField;
    private javax.swing.JComboBox<String> mTransacTypeButton;
    private javax.swing.JLabel makeTransacAmountLabel;
    private javax.swing.JLabel makeTransacDestAccoLabel;
    private javax.swing.JLabel makeTransacSourAccoLabel;
    private javax.swing.JLabel makeTransacTypeLabel;
    private javax.swing.JLabel makeTransactionLabel;
    private javax.swing.JPanel makeTransactionPanel;
    private javax.swing.JTabbedPane pesta√±asTabbedPane;
    private javax.swing.JTextField regisUserAgeTextField;
    private javax.swing.JTextField regisUserFirstnameTextField;
    private javax.swing.JTextField regisUserIDTextField;
    private javax.swing.JTextField regisUserLastnameTextField;
    private javax.swing.JButton regisUserRegisterButton;
    private javax.swing.JLabel registerUserAgeLabel;
    private javax.swing.JLabel registerUserFirstnameLabel;
    private javax.swing.JLabel registerUserIDLabel;
    private javax.swing.JLabel registerUserLabel;
    private javax.swing.JLabel registerUserLastnameLabel;
    private javax.swing.JPanel registerUserPanel;
    // End of variables declaration//GEN-END:variables
}
